unit Unit7;

interface

uses
  System.SysUtils, System.Types, System.UITypes, System.Classes, System.Variants,
  FMX.Types, FMX.Controls, FMX.Forms, FMX.Graphics, FMX.Dialogs, FMX.StdCtrls,
  FMX.EditBox, FMX.SpinBox, FMX.Controls.Presentation, FMX.Edit;

type
  TNuevaHabitacion = class(TForm)
    Edit1: TEdit;
    Edit2: TEdit;
    SpinBox1: TSpinBox;
    Label1: TLabel;
    Label2: TLabel;
    Label3: TLabel;
    Button1: TButton;
    procedure Button1Click(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  NuevaHabitacion: TNuevaHabitacion;

implementation

{$R *.fmx}
   uses
   Unit1, Unit3;



//botón para confirmar la creación de la habitación.

procedure TNuevaHabitacion.Button1Click(Sender: TObject);
var
nhabitacion: integer;
precio: double;
registroValido: boolean;
begin
  registroValido:=true;

  nhabitacion:= strtoint(SpinBox1.Text);
  try

   //validaciones pertinentes

    precio:= strtofloat(Edit1.Text);
    if precio < 0 then
      begin
        showmessage('El precio no puede ser negativo.');
        registroValido := false;
      end;
    if edit2.Text = '' then
      begin
        registroValido := false;
        showmessage('Por favor, introduce un tipo de habitación.')
      end;
    if nhabitacion < 1 then
      begin
         registroValido := false;
         showmessage('El nº de habitación no debería ser negativo o cero.');
      end;
  except
    registroValido:=false;
    showmessage('El precio debe ser un dato numérico.');
  end;

  if Tablas.MyTableHabitaciones.Locate('numero', nhabitacion, []) then
    begin
       registroValido:=false;
        showmessage('El nº de habitación ya existe, por favor, escoge otro.');
    end;


  //una vez hemos comprobado que todo está correcto, creamos el registro
  if registroValido then
    begin
      Tablas.MyTableHabitaciones.Append;
      Tablas.MyTableHabitacionesnumero.value := nhabitacion;
      Tablas.MyTableHabitacionestipo.Value := Edit2.Text;
      Tablas.MyTableHabitacionespreciobase.Value := precio;
      Tablas.MyTableHabitaciones.Post;
      NuevaHabitacion.Close;
      //refrescamos la pantalla principal para que se vea la nueva habitación
      Principal.CargarDia;
    end;

end;


end.

unit Unit1;

interface

uses
  System.SysUtils, System.Types, System.UITypes, System.Classes, System.Variants,
  FMX.Types, FMX.Controls, FMX.Forms, FMX.Graphics, FMX.Dialogs,
  FMX.Controls.Presentation, FMX.StdCtrls, FireDAC.Stan.Intf,
  FireDAC.Stan.Option, FireDAC.Stan.Error, FireDAC.UI.Intf, FireDAC.Phys.Intf,
  FireDAC.Stan.Def, FireDAC.Stan.Pool, FireDAC.Stan.Async, FireDAC.Phys,
   FireDAC.FMXUI.Wait,
  FireDAC.Stan.Param, FireDAC.DatS, FireDAC.DApt.Intf, FireDAC.DApt, Data.DB,
  FireDAC.Comp.DataSet, FireDAC.Comp.Client, Data.SqlExpr, FMX.DateTimeCtrls,  System.DateUtils,
  FMX.Layouts, FMX.Objects;

type
  TPrincipal = class(TForm)
    Label1: TLabel;
    Button1: TButton;
    Button2: TButton;
    ScrollBox1: TScrollBox;
    DateEdit1: TDateEdit;
    SpeedButton1: TSpeedButton;
    Image1: TImage;
    SpeedButton2: TSpeedButton;
    Image2: TImage;
    procedure Button2Click(Sender: TObject);
    procedure FormActivate(Sender: TObject);
    procedure DateEdit1Change(Sender: TObject);
    procedure CargarDia();
    procedure Image1Click(Sender: TObject);
    procedure SpeedButton1Click(Sender: TObject);
    procedure CrearHabitaciones();
  private
    { Private declarations }
  public
    { Public declarations }
    Fechaseleccionada: TDate;
  end;

var
  Principal: TPrincipal;

  HabitacionesBD: Array of Integer;
  PanelesHabitaciones: Array of TRectangle;

implementation

{$R *.fmx}
{$R *.iPhone55in.fmx IOS}
  uses
    Unit2, Unit3;


procedure TPrincipal.Button2Click(Sender: TObject);
begin
    PantallaMes.Show;
end;

  procedure TPrincipal.DateEdit1Change(Sender: TObject);
begin
   Fechaseleccionada := DateEdit1.Date;
end;

procedure TPrincipal.FormActivate(Sender: TObject);
begin
  Tablas.MyTableClientes.Open;
  Tablas.MyTableHabitaciones.Open;
  Tablas.MyTableEntradas.Open;
  Tablas.MyTableEntradasservicios.Open;
  Tablas.MyTableHistoricoentradas.Open;
  Tablas.MyTableTemporadas.Open;
  Tablas.MyTableServicios.Open;
  Tablas.MyQuery1.Open;

  Fechaseleccionada := Now();

  CrearHabitaciones();
end;


procedure TPrincipal.Image1Click(Sender: TObject);
begin
    FechaSeleccionada := IncDay(FechaSeleccionada, -1);
     CargarDia()
end;

procedure TPrincipal.SpeedButton1Click(Sender: TObject);
begin
      FechaSeleccionada := IncDay(FechaSeleccionada, 1);
     CargarDia()
end;

procedure TPrincipal.CargarDia();
begin
    DateEdit1.Date := FechaSeleccionada;
end;

procedure TPrincipal.CrearHabitaciones();
var
PanelHabitacion : TRectangle;
LabelHabitacion : TLabel;
fila: integer;
columna: integer;
i: integer;
cantidadHabitaciones: integer;
begin
   cantidadHabitaciones:= Tablas.MyTableHabitaciones.RecordCount;  //esta variable recogera la cantidad de habitaciones de la bbdd
   SetLength(HabitacionesBD, cantidadHabitaciones);

     //primero borrar los paneles, vaciar el array.
  if Length(PanelesHabitaciones) > 0 then
      begin
       for i := 0 to Length(PanelesHabitaciones)-1 do
          begin
          PanelesHabitaciones[i].Free;
          end;
      end;

   //guardar los nº de habitaciones
    i:=0;
    cantidadHabitaciones:= Tablas.MyTableHabitaciones.RecordCount;  //esta variable recogera la cantidad de habitaciones de la bbdd
    SetLength(HabitacionesBD, cantidadHabitaciones);
    SetLength(PanelesHabitaciones, cantidadHabitaciones);

    Tablas.MyTableHabitaciones.First;

      while not Tablas.MyTableHabitaciones.Eof do //guardamos los numero de habitacion para ponerselo a los paneles y botones
        begin
          HabitacionesBD[i]:= Tablas.MyTableHabitacionesnumero.Value;
          i:=i+1;
          Tablas.MyTableHabitaciones.Next;
        end;


     //creación de las habitaciones
     i:= 1;
     columna := 1;
     fila := 0;


    for i:=0 to (cantidadHabitaciones-1) do   //la cantidad de habitaciones se especifica aquí
     begin
      if (i mod 2 = 0) and (i <> 0) then
        begin
          fila:= fila + 1;
          columna:= 1 ;
        end;

        PanelHabitacion:=TRectangle.create(self);
        PanelHabitacion.Parent:=ScrollBox1;
        PanelHabitacion.Width := 110;
        PanelHabitacion.Height := 110;
        PanelHabitacion.Tag:=HabitacionesBD[i];
        PanelHabitacion.Position.Y:=fila*110;
        PanelHabitacion.Position.X:=columna;
        //PanelHabitacion.Caption:='Habitación'+Inttostr(HabitacionesBD[i]);
        //PanelHabitacion.ParentBackground:=false;
        PanelHabitacion.Fill.Color:=TAlphaColorRec.Greenyellow;

        LabelHabitacion:=TLabel.create(self);
        LabelHabitacion.Parent:=PanelHabitacion;
        LabelHabitacion.Text:='Habitación '+IntToStr(HabitacionesBD[i]);
        LabelHabitacion.Position.Y:=5;
        LabelHabitacion.Position.X:=5;


        columna := columna + 110;
        PanelesHabitaciones[i]:= PanelHabitacion;
    end



end;

end.
